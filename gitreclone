#!/bin/bash
#name:gitreclone

##version
gitreclone_imported=1 


function gitreclone_copy()
{
  local tempgitdir=$2
  local gitdir=$1

  if  [ -d $gitdir/.git ];then
    if [ $(ls $gitdir/.git/objects/pack/* 2>/dev/null |wc -l ) -gt 0 ];then #check for packs
       for i in $gitdir/.git/objects/pack/*;
       do
          mkdir -p $tempgitdir #create temporary dit if required.
          if [ ! -d $tempgitdir/.git ];then
            pushd $tempgitdir
                git init #we need to create repo
            popd
          fi

        cat $i|git --git-dir $tempgitdir/.git  unpack-objects #now unpack stollen packs
       done
      fi
  fi

 
}

function gitreclone_handleint()
{
  gitreclone_copy $1 $2
  kill %1
  trap - SIGINT
}


gitreclone()
{
set -x #debug: remove once done.

#gitdir: directory where repo going populate 
#tempgitdir: temprary directory/repo where repo objects are saved to restart the cloning 


  local gitdir=$(pwd)/$(basename $1)
  gitdir=$(echo $gitdir|sed 's/\.git//')
  local basegitdirname=$(basename $gitdir)
  local tempgitdir="/tmp/gitreclone/$basegitdirname"
  
  local param=
  if [ -d $tempgitdir/.git ];then 
    param="--reference $tempgitdir" #we have a saved repo.
  fi
  
    git clone "$@" $param & #start cloning in backgound

    trap  "gitreclone_handleint $gitdir $tempgitdir" INT #in case you want stop process, press ctrl-C
  
   while jobs |grep Running -q ;
   do
    if sleep 100 
    then
    gitreclone_copy $gitdir $tempgitdir #we slept for 100 second now steal git-packs to a securelocation
     else 
    gitreclone_handleint $gitdir $tempgitdir ;break #we got interrupt copy and then quit
    fi
   done
# jobs |grep Running -q || test -d $gitdir && git --git-dir=$gitdir repack   
}


if [[ $# != 0 ]];then
 gitreclone "$@"
fi

